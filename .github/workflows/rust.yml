name: rust

on:
  push:
    branches:
      - cargo-make-automation
  pull_request:
    branches:
      - cargo-make-automation

jobs:
  ## Run all default oriented feature sets across all platforms.
  default-features-matrix:
    name: default
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        feature: [default-features, no-default-features, all-features]
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: davidB/rust-cargo-make@v1
    - name: cargo make
      run: cargo make ${{ matrix.feature }}

  ## Work through all of the variations of the different features, only on linux to save concurrent resources
  exhaustive-features-matrix:
    name: exhaustive
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature: [dns-over-rustls, dns-over-https-rustls, dns-over-native-tls, dns-over-openssl, dnssec-openssl, dnssec-ring, mdns]
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - uses: davidB/rust-cargo-make@v1
    - name: cargo make
      run: cargo make ${{ matrix.feature }}

  ## Check past and future versions
  ##   this enforces the minimum version of rust this project works with
  past-future-matrix:
    name: past-future
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ['1.39.0', beta, nightly]
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.version }}
        override: true
    - uses: davidB/rust-cargo-make@v1
    - name: cargo make all-features
      run: cargo make all-features
    - name: cargo make build-bench
      if: matrix.version == 'nightly'
      run: cargo make build-bench

  ## Execute the clippy checks
  cleanliness:
    name: cleanliness
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy
        override: true
    - uses: davidB/rust-cargo-make@v1
    - name: cargo make clippy
      run: cargo make clippy
    - name: cargo make fmt
      run: cargo make fmt
